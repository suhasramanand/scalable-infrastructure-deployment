name: Terraform Apply

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-apply.yml'

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-west-2'

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init
      working-directory: terraform
      env:
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file="environments/${{ matrix.environment }}/terraform.tfvars"
      working-directory: terraform
      env:
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name scalable-infra-${{ matrix.environment }}
        kubectl config set-context --current --namespace=scalable-app

    - name: Deploy Kubernetes manifests
      run: |
        kubectl apply -f kubernetes/namespaces.yaml
        kubectl apply -f kubernetes/manifests/
      if: matrix.environment == 'prod'
