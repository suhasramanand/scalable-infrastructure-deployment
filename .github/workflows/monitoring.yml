name: Monitoring and Observability Setup

on:
  push:
    branches: [ main ]
    paths:
      - 'monitoring/**'
      - '.github/workflows/monitoring.yml'
  workflow_dispatch:

env:
  AWS_REGION: 'us-west-2'

jobs:
  setup-monitoring:
    name: Setup Monitoring Stack
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.13.0'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name scalable-infra-prod
        kubectl config set-context --current --namespace=monitoring

    - name: Add Prometheus Helm repository
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

    - name: Install Prometheus Stack
      run: |
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
          --namespace monitoring \
          --create-namespace \
          --set grafana.adminPassword=${{ secrets.GRAFANA_PASSWORD }} \
          --set prometheus.prometheusSpec.retention=30d \
          --set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage=50Gi \
          --wait --timeout=10m

    - name: Install Jaeger for distributed tracing
      run: |
        kubectl apply -f monitoring/jaeger/
        kubectl rollout status deployment/jaeger -n monitoring --timeout=300s

    - name: Install ELK Stack for logging
      run: |
        helm repo add elastic https://helm.elastic.co
        helm repo update
        
        helm upgrade --install elasticsearch elastic/elasticsearch \
          --namespace monitoring \
          --set replicas=3 \
          --set volumeClaimTemplate.resources.requests.storage=100Gi \
          --wait --timeout=10m
        
        helm upgrade --install kibana elastic/kibana \
          --namespace monitoring \
          --wait --timeout=10m
        
        helm upgrade --install logstash elastic/logstash \
          --namespace monitoring \
          --wait --timeout=10m

    - name: Configure monitoring dashboards
      run: |
        kubectl apply -f monitoring/dashboards/
        kubectl apply -f monitoring/alerts/

    - name: Setup log aggregation
      run: |
        kubectl apply -f monitoring/fluentd/
        kubectl apply -f monitoring/filebeat/

    - name: Verify monitoring stack
      run: |
        kubectl get pods -n monitoring
        kubectl get services -n monitoring
        
        # Wait for critical components to be ready
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=prometheus -n monitoring --timeout=300s
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=grafana -n monitoring --timeout=300s

    - name: Get monitoring endpoints
      run: |
        echo "Grafana URL:"
        kubectl get ingress -n monitoring -o jsonpath='{.items[0].spec.rules[0].host}'
        echo ""
        echo "Prometheus URL:"
        kubectl get service prometheus-kube-prometheus-prometheus -n monitoring -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
        echo ""
        echo "Jaeger URL:"
        kubectl get service jaeger -n monitoring -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
